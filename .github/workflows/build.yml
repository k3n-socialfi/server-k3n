name: K3N CI/CD Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    env:
      NODE_ENV: ${{ secrets.NODE_ENV }}
      CONSOLE_LOG_LEVEL: ${{ secrets.CONSOLE_LOG_LEVEL }}
      PORT: ${{ secrets.PORT }}
      API_VERSION: ${{ secrets.API_VERSION }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
      MONGO_URL: ${{ secrets.MONGO_URL }}
      JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
      JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
      ACCESS_EXPIRES_TIME: "1h"
      REFRESH_EXPIRES_TIME: "7d"
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_KEY_SECRET: ${{ secrets.TWITTER_API_KEY_SECRET }}
      TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      TWITTER_CALLBACK_URL: ${{ secrets.TWITTER_CALLBACK_URL }}
      TWITTER_CLIENT_ID: ${{ secrets.TWITTER_CLIENT_ID }}
      TWITTER_CLIENT_SECRET: ${{ secrets.TWITTER_CLIENT_SECRET }}
      GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      X_RAPIDAPI_KEY: ${{ secrets.X_RAPIDAPI_KEY }}
      X_RAPIDAPI_HOST: ${{ secrets.X_RAPIDAPI_HOST }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache pnpm dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
          ${{ runner.os }}-node-

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install --strict-peer-dependencies --verbose

    - name: Install Nest CLI
      run: pnpm install -g @nestjs/cli

    - name: Build project
      run: pnpm run build

    - name: Install pm2
      run: pnpm install -g pm2@latest

    - name: Check if server-k3n is running
      id: check-server
      run: |
        if pm2 describe server-k3n > /dev/null; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
        fi

    - name: Start or restart server
      run: |
        if [ "$exists" == "false" ]; then
          pm2 start ./dist/main.js --name server-k3n -f --update-env
        else
          pm2 restart server-k3n --update-env
        fi
